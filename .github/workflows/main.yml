name: CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
    # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
    
      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest] 
        # include:
          # - os: windows-latest
          #   vcpkgCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'
          # - os: ubuntu-latest
          #   vcpkgCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'
          # - os: macos-latest
          #   vcpkgCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'
    
    steps:
    - uses: actions/checkout@v4 

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      id: runvcpkg
      with:
        # This specifies the location of vcpkg, where it is going to be restored from cache, or create from scratch.
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        # The Git commit id of vcpkg to be checked out. This is only needed because we are not using a submodule.
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId}}'

    - name: Set Preset
      run: cmake --preset dev
      shell: bash

    - name: Build Gern
      run: cmake --build build/dev
      shell: bash

    - name: Build Gern
      run: ctest --test-dir ${{  github.workspace }}/build/dev 
      shell: bash
  
