TTGIR #blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 4], order = [1, 0]}>
#loc = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:89", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_blur_fused_block(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0), %arg3: i32 loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/manya/gern/apps/blur/triton_2d_blur.py":295:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x128xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<3.000000e+00> : tensor<1x128xf32, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.get_program_id y : i32 loc(#loc4)
    %3 = arith.muli %2, %c128_i32 : i32 loc(#loc5)
    %4 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc55)
    %5 = tt.splat %3 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc56)
    %6 = arith.addi %5, %4 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc56)
    %7 = arith.muli %1, %arg2 : i32 loc(#loc57)
    %8 = tt.addptr %arg0, %7 : !tt.ptr<f32>, i32 loc(#loc58)
    %9 = tt.expand_dims %6 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc59)
    %10 = tt.splat %8 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc60)
    %11 = tt.addptr %10, %9 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc60)
    %12 = arith.cmpi slt, %1, %arg4 : i32 loc(#loc61)
    %13 = tt.splat %arg5 : i32 -> tensor<1x128xi32, #blocked> loc(#loc62)
    %14 = arith.cmpi slt, %9, %13 : tensor<1x128xi32, #blocked> loc(#loc62)
    %15 = tt.splat %12 : i1 -> tensor<1x128xi1, #blocked> loc(#loc63)
    %16 = arith.andi %15, %14 : tensor<1x128xi1, #blocked> loc(#loc63)
    %17 = tt.load %11, %16, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc64)
    %18 = arith.addi %3, %c1_i32 : i32 loc(#loc17)
    %19 = tt.splat %18 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc65)
    %20 = arith.addi %19, %4 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc65)
    %21 = tt.expand_dims %20 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc66)
    %22 = tt.addptr %10, %21 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc67)
    %23 = arith.cmpi slt, %21, %13 : tensor<1x128xi32, #blocked> loc(#loc68)
    %24 = arith.andi %15, %23 : tensor<1x128xi1, #blocked> loc(#loc69)
    %25 = tt.load %22, %24, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc70)
    %26 = arith.addi %3, %c2_i32 : i32 loc(#loc19)
    %27 = tt.splat %26 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc71)
    %28 = arith.addi %27, %4 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc71)
    %29 = tt.expand_dims %28 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc72)
    %30 = tt.addptr %10, %29 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc73)
    %31 = arith.cmpi slt, %29, %13 : tensor<1x128xi32, #blocked> loc(#loc74)
    %32 = arith.andi %15, %31 : tensor<1x128xi1, #blocked> loc(#loc75)
    %33 = tt.load %30, %32, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc76)
    %34 = arith.addf %17, %25 : tensor<1x128xf32, #blocked> loc(#loc21)
    %35 = arith.addf %34, %33 : tensor<1x128xf32, #blocked> loc(#loc22)
    %36 = arith.divf %35, %cst_0 : tensor<1x128xf32, #blocked> loc(#loc23)
    %37 = arith.addi %1, %c1_i32 : i32 loc(#loc24)
    %38 = arith.muli %37, %arg2 : i32 loc(#loc77)
    %39 = tt.addptr %arg0, %38 : !tt.ptr<f32>, i32 loc(#loc78)
    %40 = tt.splat %39 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc79)
    %41 = tt.addptr %40, %9 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc79)
    %42 = arith.cmpi slt, %37, %arg4 : i32 loc(#loc80)
    %43 = tt.splat %42 : i1 -> tensor<1x128xi1, #blocked> loc(#loc81)
    %44 = arith.andi %43, %14 : tensor<1x128xi1, #blocked> loc(#loc81)
    %45 = tt.load %41, %44, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc82)
    %46 = tt.addptr %40, %21 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc83)
    %47 = arith.andi %43, %23 : tensor<1x128xi1, #blocked> loc(#loc84)
    %48 = tt.load %46, %47, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc85)
    %49 = tt.addptr %40, %29 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc86)
    %50 = arith.andi %43, %31 : tensor<1x128xi1, #blocked> loc(#loc87)
    %51 = tt.load %49, %50, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc88)
    %52 = arith.addf %45, %48 : tensor<1x128xf32, #blocked> loc(#loc28)
    %53 = arith.addf %52, %51 : tensor<1x128xf32, #blocked> loc(#loc29)
    %54 = arith.divf %53, %cst_0 : tensor<1x128xf32, #blocked> loc(#loc30)
    %55 = arith.subi %arg4, %c2_i32 : i32 loc(#loc31)
    %56 = arith.subi %arg5, %c2_i32 : i32 loc(#loc32)
    %57 = tt.splat %56 : i32 -> tensor<1x128xi32, #blocked> loc(#loc89)
    %58 = arith.cmpi slt, %9, %57 : tensor<1x128xi32, #blocked> loc(#loc89)
    %59:2 = scf.for %arg6 = %c0_i32 to %c16_i32 step %c1_i32 iter_args(%arg7 = %36, %arg8 = %54) -> (tensor<1x128xf32, #blocked>, tensor<1x128xf32, #blocked>)  : i32 {
      %60 = arith.addi %1, %arg6 : i32 loc(#loc36)
      %61 = arith.addi %60, %c2_i32 : i32 loc(#loc37)
      %62 = arith.muli %61, %arg2 : i32 loc(#loc90)
      %63 = tt.addptr %arg0, %62 : !tt.ptr<f32>, i32 loc(#loc91)
      %64 = tt.splat %63 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc92)
      %65 = tt.addptr %64, %9 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc92)
      %66 = arith.cmpi slt, %61, %arg4 : i32 loc(#loc93)
      %67 = tt.splat %66 : i1 -> tensor<1x128xi1, #blocked> loc(#loc94)
      %68 = arith.andi %67, %14 : tensor<1x128xi1, #blocked> loc(#loc94)
      %69 = tt.load %65, %68, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc95)
      %70 = tt.addptr %64, %21 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc96)
      %71 = arith.andi %67, %23 : tensor<1x128xi1, #blocked> loc(#loc97)
      %72 = tt.load %70, %71, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc98)
      %73 = tt.addptr %64, %29 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc99)
      %74 = arith.andi %67, %31 : tensor<1x128xi1, #blocked> loc(#loc100)
      %75 = tt.load %73, %74, %cst : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc101)
      %76 = arith.addf %69, %72 : tensor<1x128xf32, #blocked> loc(#loc41)
      %77 = arith.addf %76, %75 : tensor<1x128xf32, #blocked> loc(#loc42)
      %78 = arith.divf %77, %cst_0 : tensor<1x128xf32, #blocked> loc(#loc43)
      %79 = arith.addf %arg7, %arg8 : tensor<1x128xf32, #blocked> loc(#loc44)
      %80 = arith.addf %79, %78 : tensor<1x128xf32, #blocked> loc(#loc45)
      %81 = arith.divf %80, %cst_0 : tensor<1x128xf32, #blocked> loc(#loc46)
      %82 = arith.muli %60, %arg3 : i32 loc(#loc102)
      %83 = tt.addptr %arg1, %82 : !tt.ptr<f32>, i32 loc(#loc103)
      %84 = tt.splat %83 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc104)
      %85 = tt.addptr %84, %9 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc104)
      %86 = arith.cmpi slt, %60, %55 : i32 loc(#loc105)
      %87 = tt.splat %86 : i1 -> tensor<1x128xi1, #blocked> loc(#loc106)
      %88 = arith.andi %87, %58 : tensor<1x128xi1, #blocked> loc(#loc106)
      tt.store %85, %81, %88 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc107)
      scf.yield %arg8, %78 : tensor<1x128xf32, #blocked>, tensor<1x128xf32, #blocked> loc(#loc53)
    } {tt.num_stages = 8 : i32} loc(#loc35)
    tt.return loc(#loc54)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":300:28)
#loc3 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":300:38)
#loc4 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":301:28)
#loc5 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":301:38)
#loc6 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":253:34)
#loc7 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":304:43)
#loc8 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":253:21)
#loc9 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":254:35)
#loc10 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":254:16)
#loc11 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":254:57)
#loc12 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":254:46)
#loc13 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":255:36)
#loc14 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":255:68)
#loc15 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":255:46)
#loc16 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":256:19)
#loc17 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":305:52)
#loc18 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":306:43)
#loc19 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":307:52)
#loc20 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":308:43)
#loc21 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":309:25)
#loc22 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":309:36)
#loc23 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":309:46)
#loc24 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":311:43)
#loc25 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":312:43)
#loc26 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":314:43)
#loc27 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":316:43)
#loc28 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":317:25)
#loc29 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":317:36)
#loc30 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":317:46)
#loc31 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":329:94)
#loc32 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":329:102)
#loc33 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":264:68)
#loc34 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":330:25)
#loc35 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":319:36)
#loc36 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":320:47)
#loc37 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":320:49)
#loc38 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":321:43)
#loc39 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":323:43)
#loc40 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":325:43)
#loc41 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":326:29)
#loc42 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":326:40)
#loc43 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":326:52)
#loc44 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":328:27)
#loc45 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":328:36)
#loc46 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":328:46)
#loc47 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":263:35)
#loc48 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":263:16)
#loc49 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":263:46)
#loc50 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":264:36)
#loc51 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":264:46)
#loc52 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":265:20)
#loc53 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":333:8)
#loc54 = loc("/home/manya/gern/apps/blur/triton_2d_blur.py":319:4)
#loc55 = loc(callsite(#loc6 at #loc7))
#loc56 = loc(callsite(#loc8 at #loc7))
#loc57 = loc(callsite(#loc9 at #loc7))
#loc58 = loc(callsite(#loc10 at #loc7))
#loc59 = loc(callsite(#loc11 at #loc7))
#loc60 = loc(callsite(#loc12 at #loc7))
#loc61 = loc(callsite(#loc13 at #loc7))
#loc62 = loc(callsite(#loc14 at #loc7))
#loc63 = loc(callsite(#loc15 at #loc7))
#loc64 = loc(callsite(#loc16 at #loc7))
#loc65 = loc(callsite(#loc8 at #loc18))
#loc66 = loc(callsite(#loc11 at #loc18))
#loc67 = loc(callsite(#loc12 at #loc18))
#loc68 = loc(callsite(#loc14 at #loc18))
#loc69 = loc(callsite(#loc15 at #loc18))
#loc70 = loc(callsite(#loc16 at #loc18))
#loc71 = loc(callsite(#loc8 at #loc20))
#loc72 = loc(callsite(#loc11 at #loc20))
#loc73 = loc(callsite(#loc12 at #loc20))
#loc74 = loc(callsite(#loc14 at #loc20))
#loc75 = loc(callsite(#loc15 at #loc20))
#loc76 = loc(callsite(#loc16 at #loc20))
#loc77 = loc(callsite(#loc9 at #loc25))
#loc78 = loc(callsite(#loc10 at #loc25))
#loc79 = loc(callsite(#loc12 at #loc25))
#loc80 = loc(callsite(#loc13 at #loc25))
#loc81 = loc(callsite(#loc15 at #loc25))
#loc82 = loc(callsite(#loc16 at #loc25))
#loc83 = loc(callsite(#loc12 at #loc26))
#loc84 = loc(callsite(#loc15 at #loc26))
#loc85 = loc(callsite(#loc16 at #loc26))
#loc86 = loc(callsite(#loc12 at #loc27))
#loc87 = loc(callsite(#loc15 at #loc27))
#loc88 = loc(callsite(#loc16 at #loc27))
#loc89 = loc(callsite(#loc33 at #loc34))
#loc90 = loc(callsite(#loc9 at #loc38))
#loc91 = loc(callsite(#loc10 at #loc38))
#loc92 = loc(callsite(#loc12 at #loc38))
#loc93 = loc(callsite(#loc13 at #loc38))
#loc94 = loc(callsite(#loc15 at #loc38))
#loc95 = loc(callsite(#loc16 at #loc38))
#loc96 = loc(callsite(#loc12 at #loc39))
#loc97 = loc(callsite(#loc15 at #loc39))
#loc98 = loc(callsite(#loc16 at #loc39))
#loc99 = loc(callsite(#loc12 at #loc40))
#loc100 = loc(callsite(#loc15 at #loc40))
#loc101 = loc(callsite(#loc16 at #loc40))
#loc102 = loc(callsite(#loc47 at #loc34))
#loc103 = loc(callsite(#loc48 at #loc34))
#loc104 = loc(callsite(#loc49 at #loc34))
#loc105 = loc(callsite(#loc50 at #loc34))
#loc106 = loc(callsite(#loc51 at #loc34))
#loc107 = loc(callsite(#loc52 at #loc34))

